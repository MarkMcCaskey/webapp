#![feature(plugin)]
#![plugin(rocket_codegen)]

extern crate rocket;

use std::io;
use std::io::Read;
use std::path::{Path, PathBuf};

use rocket::response::NamedFile;
use rocket::http::{Cookies, Cookie};
use rocket::Data;
use rocket::response::Redirect;

#[get("/")]
fn index() -> io::Result<NamedFile> {
    NamedFile::open("static/index.html")
}

#[get("/<file..>")]
fn files(file: PathBuf) -> Option<NamedFile> {
    NamedFile::open(Path::new("static").join(file)).ok()
}

#[get("/hello")]
fn hello(cookies: Cookies) -> Option<String> {
    cookies.get("name").map(|value| format!("Hello, {}", value))
}

#[post("/test", data = "<name>")]
fn submit_name(name: Data, cookies: mut Cookies) -> Redirect {
    let mut name_string = String::new();
    if let Ok(_) = name.open().read_to_string(&mut name_string) {
        cookies.add(Cookie::new("name", name_string.clone()));
        println!("Hello, {}", name_string.clone());
        Redirect::to("/hello")
    } else {
        Redirect::to("/404")
    }
}

fn main() {
    rocket::ignite()
        .mount("/", routes![index, hello, submit_name, files])
        .launch();
}
